version: 2.1

defaults:
  environment: &environment
    DOCKER_REGISTRY: docker.io
    DOCKER_USER: kelvintaywlcircleci
    DOCKER_LOGIN: kelvintaywlcircleci
    # DOCKER_PASSWORD will be injected as a secret

commands:
  docker-registry-login:
    description: log in to the Docker image registry
    steps:
      - run:
          name: Login to registry
          command: |
            # login credentials should be provided via context or project environment variables.
            echo $DOCKER_PASSWORD | docker login $DOCKER_REGISTRY --username $DOCKER_LOGIN --password-stdin
  setup-buildx:
    description: set up context and builder instances for Docker buildx
    steps:
      - run:
          name: Check Docker settings (for buildx)
          command: |
            docker version
            docker buildx version
            docker context inspect
      - run:
          name: Setup docker buildx
          command: |
            docker context create circleci
            docker buildx create --use circleci

            docker buildx ls
            docker context inspect circleci

executors:
  docker:
    docker:
      - image: cimg/base:stable
    resource_class: medium
  machine:
    machine:
      # See https://circleci.com/developer/images?imageType=machine
      image: ubuntu-2204:2022.07.1
    resource_class: medium

jobs:
  build-push:
    environment:
      <<: *environment
    parameters:
      exec:
        type: enum
        enum:
          - docker
          - machine
      image-name:
        description: image name for Docker image to be pushed
        type: string
        # See https://hub.docker.com/repository/docker/kelvintaywlcircleci/hello-buildx
        default: "hello-buildx"
      cache-type:
        description: buildx cache storage type (local/registry)
        type: enum
        enum:
          - registry
          - local
      registry-cache-image:
        type: string
        description: registry image for buildx cache storage (applicable only when using registry cache)
        # See https://hub.docker.com/repository/docker/kelvintaywlcircleci/hello-buildx-registry-cache
        default: "hello-buildx-registry-cache"
      local-cache-path:
        type: string
        description: local path for buildx cache storage (applicable only when using local cache)
        default: "/tmp/dockercache"
      local-cache-prefix:
        type: string
        description: cache prefix for buildx cache storage (applicable only when using local cache)
        default: hello-buildx
    executor: << parameters.exec >>
    steps:
      - checkout
      - when:
          condition:
            equal: [ docker, << parameters.exec >> ]
          steps:
            # should be >= 20.10.14 come Sep 6 2022
            # See https://discuss.circleci.com/t/default-docker-version-for-remote-docker-jobs-changing-on-september-6/45157
            - setup_remote_docker:
                # buildx is available
                version: 20.10.14
      - setup-buildx
      # Login early since we likely need to pull from registry cache.
      # ASSUMPTION: the registry cache image is located in the same registry
      # as where we will be pushing our built image to.
      - docker-registry-login
      - when:
          condition:
            equal: [ local, << parameters.cache-type >> ]
          steps:
            - restore_cache:
                keys:
                  - << parameters.local-cache-prefix >>-{{ arch }}-{{ .Branch }}-
                  - << parameters.local-cache-prefix >>-{{ arch }}-
            - run:
                name: Build image with buildx and local cache
                command: |
                  docker buildx build --progress=plain \
                    --tag="${DOCKER_REGISTRY}/${DOCKER_USER}/<< parameters.image-name >>:${CIRCLE_SHA1}" \
                    --cache-to=type=local,mode=max,dest=<< parameters.local-cache-path >> \
                    --cache-from=type=local,src=<< parameters.local-cache-path >> \
                    --output=type=docker \
                    .

                  docker image ls
            - save_cache:
                key: << parameters.local-cache-prefix >>-{{ arch }}-{{ .Branch }}-{{ checksum "<< parameters.local-cache-path >>/index.json" }}
                paths:
                  - << parameters.local-cache-path >>
      - when:
          condition:
            equal: [ registry, << parameters.cache-type >> ]
          steps:
            - run:
                name: Docker build with registry cache
                command: |
                  docker buildx build --progress=plain \
                    --tag="${DOCKER_REGISTRY}/${DOCKER_USER}/<< parameters.image-name >>:${CIRCLE_SHA1}" \
                    --cache-to=type=registry,mode=max,ref="${DOCKER_REGISTRY}/${DOCKER_USER}/<< parameters.registry-cache-image >>" \
                    --cache-from=type=registry,ref="${DOCKER_REGISTRY}/${DOCKER_USER}/<< parameters.registry-cache-image >>" \
                    --output=type=docker \
                    .

                  docker image ls
      - run:
          name: Run built-image as container
          command: |
            docker container run --name test --env USER="<< parameters.cache-type >>" "${DOCKER_REGISTRY}/${DOCKER_USER}/<< parameters.image-name >>:${CIRCLE_SHA1}"
      - run:
          name: Publish image
          command: |
            docker image tag "${DOCKER_REGISTRY}/${DOCKER_USER}/<< parameters.image-name >>:${CIRCLE_SHA1}" "${DOCKER_REGISTRY}/${DOCKER_USER}/<< parameters.image-name >>:<< parameters.cache-type >>"
            docker image push "${DOCKER_REGISTRY}/${DOCKER_USER}/<< parameters.image-name >>:<< parameters.cache-type >>"

workflows:
  i-can-buildx:
    jobs:
      - build-push:
          matrix:
            parameters:
              exec:
                - docker
                - machine
              cache-type:
                - registry
                - local
